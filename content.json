[{"title":"解决iOS与pad里ifram无法滑动问题","date":"2017-02-17T09:28:34.000Z","path":"2017/02/17/解决iOS与pad里ifram无法滑动问题/","text":"解决iOS与pad里ifram无法滑动问题今天遇到一个问题，在手机内嵌ifram，在iOS和pad里只会显示第一屏的内容，下面的内容加载出来了但是全部在下面，无法滑动展示，所以特意找了一下方法（经测可用） 在iframe的父容器添加如下css样式：12-webkit-overflow-scrolling:touch;overflow:auto; 对于安卓低于4.0版本的浏览器不支持overflow的问题，可使用如下js解决（对uc无效）:12345678910111213function touchScroll(id) &#123; var el = document.getElementByIdx_x(id); var scrollStartPos = 0; document.getElementByIdx_x(id).addEventListener(\"touchstart\", function (event) &#123; scrollStartPos = this.scrollTop + event.touches[0].pageY; event.preventDefault(); &#125;, false); document.getElementByIdx_x(id).addEventListener(\"touchmove\", function (event) &#123; this.scrollTop = scrollStartPos - event.touches[0].pageY; event.preventDefault(); &#125;, false); &#125;","tags":[{"name":"ifram ios pad","slug":"ifram-ios-pad","permalink":"http://liyuanqing.top/tags/ifram-ios-pad/"}]},{"title":"js实现jq的ajax","date":"2017-02-13T10:22:43.000Z","path":"2017/02/13/js实现jq的ajax/","text":"本文将介绍如何使用js封装一段代码，实现jq的ajax功能，每一步代码均有注释便于理解 实现代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556function ajax()&#123; //获取ajax的相应值（请求类型，请求地址，同步或异步，传递数据，接收数据类型，成功失败函数等） var ajaxData = &#123; type:arguments[0].type || \"GET\", url:arguments[0].url || \"\", async:arguments[0].async || \"true\", data:arguments[0].data || null, dataType:arguments[0].dataType || \"text\", contentType:arguments[0].contentType || \"application/x-www-form-urlencoded\", beforeSend:arguments[0].beforeSend || function()&#123;&#125;, success:arguments[0].success || function()&#123;&#125;, error:arguments[0].error || function()&#123;&#125; &#125; ajaxData.beforeSend() var xhr = createxmlHttpRequest(); //创建 XMLHttpRequest 对象 xhr.responseType=ajaxData.dataType; //预期服务器返回的数据类型 xhr.open(ajaxData.type,ajaxData.url,ajaxData.async); //规定请求的类型、URL 以及是否异步处理请求 xhr.setRequestHeader(\"Content-Type\",ajaxData.contentType); //发送信息至服务器时内容编码类型(向请求添加 HTTP 头) xhr.send(convertData(ajaxData.data)); //将请求发送到服务器 //当请求被发送到服务器时，我们需要执行一些基于响应的任务。 //每当 readyState 改变时，就会触发 onreadystatechange 事件。 //readyState 属性存有 XMLHttpRequest 的状态信息。 xhr.onreadystatechange = function() &#123; if (xhr.readyState == 4) &#123; if(xhr.status == 200)&#123; ajaxData.success(xhr.response) &#125;else&#123; ajaxData.error() &#125; &#125; &#125;&#125;//创建 XMLHttpRequest 对象function createxmlHttpRequest() &#123; if (window.ActiveXObject) &#123; // IE6, IE5 浏览器执行代码 return new ActiveXObject(\"Microsoft.XMLHTTP\"); &#125; else if (window.XMLHttpRequest) &#123; // IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码 return new XMLHttpRequest(); &#125;&#125;//解析传入的对象function convertData(data)&#123; if( typeof data === 'object' )&#123; var convertResult = \"\" ; for(var c in data)&#123; convertResult+= c + \"=\" + data[c] + \"&amp;\"; &#125; convertResult=convertResult.substring(0,convertResult.length-1) return convertResult; &#125;else&#123; return data; &#125;&#125; 调用方法ajax({ type:\"POST\", url:\"ajax.php\", dataType:\"json\", data:{\"val1\":\"abc\",\"val2\":123,\"val3\":\"456\"}, beforeSend:function(){ //some js code }, success:function(msg){ console.log(msg) }, error:function(){ console.log(\"error\") } })","tags":[{"name":"js jq ajax","slug":"js-jq-ajax","permalink":"http://liyuanqing.top/tags/js-jq-ajax/"}]},{"title":"基于github与hexo搭建自己的博客","date":"2017-02-10T09:58:05.000Z","path":"2017/02/10/基于github与hexo搭建自己的博客/","text":"基于github与hexo搭建自己的博客本文将介绍如何基于github与hexo模板搭建一个属于自己的博客，博客的样式可以参看 李元庆的博客 博客的具体代码可以查看我的github仓库（持续更新中），同时欢迎各位留言提问与给出建议 为何选择github与hexo github为我们提供了免费的域名与仓库，相比较博客园与新浪微博等博客，虽然他们开通相对容易，但是限制较多，github Pages可以定制自己的博客内容功能能，一切有自己操控。 Github Pages优点： 轻量级的博客系统，没有麻烦的配置 使用标记语言，比如Markdown 无需自己搭建服务器 根据Github的限制，对应的每个站有300MB空间 可以绑定自己的域名Github Pages缺点： 不能关联数据库，所有的东西都是静态的 具有大小限制（似乎是2G）,不过用于搭建自己的博客或者是小站完全是够的一开始我选择的是官方推荐的Jekyll，但是Jekyll需要的环境太多，较复杂，所以后来我选择的比较简单的hexo接下来我将介绍如何搭建博客并绑定自己的域名 注册github账号和自己的仓库 前往github注册登录账号，与一般的网站注册账号的流程差不多，但是github是国外网站，在国内访问速度会有点慢注册好了之后登录&lt; 建立自己的仓库&lt; 然后点击new按钮你会看到&lt;注意你的公共哭的名称要填写格式为XXX.github.io其中XXX是你的用户名 未完待续。。。","tags":[{"name":"github 博客hexo","slug":"github-博客hexo","permalink":"http://liyuanqing.top/tags/github-博客hexo/"}]},{"title":"Hello World","date":"2017-02-09T06:11:39.448Z","path":"2017/02/09/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]